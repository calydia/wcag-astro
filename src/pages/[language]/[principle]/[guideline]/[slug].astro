---
import fetchApi from '../../../../lib/strapi';
import Layout from '../../../../layouts/Layout.astro';
import SidebarMenu from '../../../../components/SidebarMenu.astro';
import Breadcrumb from '../../../../components/Breadcrumb.astro';

import { getLangFromUrl, useTranslations } from '../../../../i18n/utils';
import type Criterion from '../../../../interfaces/criterion';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const pages = await fetchApi<Criterion[]>({
    endpoint: 'wcag-criteria',
    wrappedByKey: 'data',
  });

  return pages.map((page: Criterion) => ({
    params: {
      slug: page.attributes.slug,
      language: page.attributes.locale,
      principle: page.attributes.wcagPrinciple.data.attributes.slug,
      guideline: page.attributes.wcagGuideline.data.attributes.slug,
    },
    props: page,
  }));
}

type Props = Criterion;

const page = Astro.props;

// const engUrl = (page.attributes.locale == 'en') ? page.attributes.pageUrl : page.attributes.localizations.data[0].attributes.pageUrl;
// const fiUrl = (page.attributes.locale == 'fi') ? page.attributes.pageUrl : page.attributes.localizations.data[0].attributes.pageUrl;
---

<Layout type="other" metaDescription={ page.attributes.metaDescription } locale={ page.attributes.locale } title={ page.attributes.name }

  >
  <SidebarMenu principleNumber={ page.attributes.wcagPrinciple.data.attributes.principleNumber } principleName={ page.attributes.wcagPrinciple.data.attributes.name } />
  <div class="max-w-[1564px] mx-auto md:px-8-px">
    <div class="text-lt-gray dark:text-dk-gray py-2 px-4-px max-w-xl mx-auto md:py-6 md:px-8-px lg:max-w-4xl">
      <Breadcrumb type="criterion"
        language={ page.attributes.locale }
        principleNumber={ page.attributes.wcagPrinciple.data.attributes.principleNumber }
        principleName={ page.attributes.wcagPrinciple.data.attributes.name }
        principleSlug={ page.attributes.wcagPrinciple.data.attributes.slug }
        guidelineNumber={ page.attributes.wcagGuideline.data.attributes.guidelineNumber }
        guidelineName={ page.attributes.wcagGuideline.data.attributes.name }
        guidelineSlug={ page.attributes.wcagGuideline.data.attributes.slug }
        currentNumber={ page.attributes.criterionNumber }
        currentPage={ page.attributes.name }
      />
      <h1 id="skip-target">{ page.attributes.criterionNumber } { page.attributes.name }</h1>
      <div class="text-xl bodytext">
        <div>{ t('wcag-level') } { page.attributes.criterionLevel }</div>
        <div>{ t('wcag-version') } { page.attributes.wcagVersion }</div>

        <h2>{ t('criterion-desc') }</h2>
        <blockquote>
          <Fragment set:html={ page.attributes.officialDescription } />
        </blockquote>

        {(page.attributes.whatToDo) ? 
          <h2>{ t('what-to-do') }</h2>
          <Fragment set:html={ page.attributes.whatToDo } />
        : null}

        {(page.attributes.whyItIsImportant) ? 
          <h2>{ t('why-is-it-important') }</h2>
          <Fragment set:html={ page.attributes.whyItIsImportant } />
        : null}

        {(page.attributes.commonPitfalls) ? 
          <h2>{ t('common-pitfalls') }</h2>
          <Fragment set:html={ page.attributes.commonPitfalls } />
        : null}

        {(page.attributes.howToTestForIt) ? 
          <h2>{ t('how-to-test-for-it') }</h2>
          <Fragment set:html={ page.attributes.howToTestForIt } />
        : null}

        {(page.attributes.moreAboutThisCriterion) ? 
          <h2>{ t('more-about-this-elsewhere') }</h2>
          <Fragment set:html={ page.attributes.moreAboutThisCriterion } />
        : null}
      </div>
    </div>
  </div>
</Layout>
